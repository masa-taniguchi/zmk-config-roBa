#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                      &kp T                                                           &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                      &kp G        &kp LC(RG(LEFT_ARROW))    &kp RG(RC(RIGHT_ARROW))  &kp H        &kp J  &kp K      &kp L    &lt 1 MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                      &kp B        &kp RC(RG(D))             &kp RG(RC(F4))           &kp N        &kp M  &kp COMMA  &kp DOT  &mt RCTRL SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT LANG_HANJA  &lt 1 SPACE  &lt 5 LANG_HANGEUL        &kp BACKSPACE            &lt 2 ENTER                             &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM_MOUSE {
            bindings = <
&kp FSLH      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp TAB                          &kp RA(F4)     &kp RA(LEFT_ARROW)  &mkp MB3        &kp RA(RIGHT_ARROW)  &kp PAGE_UP
&kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &trans    &trans      &kp RS(H)      &mkp MB1            &kp UP_ARROW    &mkp MB2             &kp PAGE_DOWN
&kp MINUS     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &trans    &trans      &kp RIGHT_ALT  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp RCTRL
&kp PLUS      &kp NUMBER_0  &kp DOT       &trans        &trans     &trans    &kp DELETE  &trans                                                                  &kp RIGHT_SHIFT
            >;
        };

        MARK_FUNC {
            bindings = <
&kp GRAVE        &kp NON_US_BACKSLASH  &kp SEMICOLON  &kp LEFT_BRACKET      &kp RIGHT_BRACKET                            &kp MINUS  &kp EQUAL  &kp SQT  &kp F11  &kp F12
&kp CARET        &kp AMPERSAND         &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans        &trans  &kp F6     &kp F7     &kp F8   &kp F9   &kp F10
&kp EXCLAMATION  &kp AT_SIGN           &kp HASH       &kp DOLLAR            &kp PERCENT            &trans        &trans  &kp F1     &kp F2     &kp F3   &kp F4   &kp F5
&trans           &kp NUMBER_0          &kp PERIOD     &kp LEFT_SHIFT        &kp TAB                &kp ESCAPE    &trans  &trans                                  &kp RIGHT_SHIFT
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                     &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans  &trans    &kp RIGHT_ALT
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &trans  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans    &kp RCTRL
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                              &kp RIGHT_SHIFT
            >;
        };

        SCROLL {
            bindings = <
&kp PRINTSCREEN  &kp LEFT_ARROW  &kp UP_ARROW       &kp DOWN_ARROW  &kp RIGHT_ARROW                        &kp RC(RA(NUMBER_7))  &kp RG(RS(LEFT_ARROW))  &kp RG(RS(RIGHT_ARROW))  &trans  &trans
&trans           &kp HOME        &kp C_VOLUME_UP    &kp LCTRL       &kp LEFT_ALT     &trans    &trans      &kp RC(RS(G))         &kp RG(LEFT_ARROW)      &kp RG(RIGHT_ARROW)      &trans  &trans
&trans           &kp END         &kp C_VOLUME_DOWN  &kp LEFT_SHIFT  &trans           &trans    &trans      &trans                &kp RG(UP_ARROW)        &kp RG(DOWN_ARROW)       &trans  &trans
&trans           &trans          &trans             &trans          &trans           &trans    &kp DELETE  &trans                                                                         &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
